{{template "base/head" .}}
<div class="page-content repository quickstart">
	{{template "repo/header" .}}
	<div class="ui container">
		<div class="ui grid">
			<div class="sixteen wide column content">
				{{template "base/alert" .}}
				{{if .Repository.IsArchived}}
					<div class="ui warning message">
						{{.locale.Tr "repo.archive.title"}}
					</div>
				{{end}}
				{{if .Repository.IsBroken}}
						<div class="ui segment center">
							{{.locale.Tr "repo.broken_message"}}
						</div>
				{{else if .CanWriteCode}}
					<h4 class="ui top attached header">
						{{.locale.Tr "repo.quick_guide"}}
					</h4>
					<div class="ui attached guide table segment empty-repo-guide">
						<div class="item">
							<h3>{{.locale.Tr "repo.clone_this_repo"}} <small>{{.locale.Tr "repo.clone_helper" "http://git-scm.com/book/en/Git-Basics-Getting-a-Git-Repository" | Str2html}}</small></h3>
							<div class="ui action small input">
								{{template "repo/clone_buttons" .}}
							</div>
						</div>

						{{if not .Repository.IsArchived}}
							<div class="ui divider"></div>

							<div class="item">
								<h3>{{.locale.Tr "repo.create_new_repo_command"}}</h3>
								<div class="markup">
									<pre><code>touch README.md
git init
{{if ne .Repository.DefaultBranch "master"}}git checkout -b {{.Repository.DefaultBranch}}{{end}}
git add README.md
git commit -m "first commit"
git remote add origin <span class="clone-url"></span>
git push -u origin {{.Repository.DefaultBranch}}</code></pre>
								</div>
							</div>
							<div class="ui divider"></div>

							<div class="item">
								<h3>{{.locale.Tr "repo.push_exist_repo"}}</h3>
								<div class="markup">
									<pre><code>git remote add origin <span class="clone-url"></span>
git push -u origin {{.Repository.DefaultBranch}}</code></pre>
								</div>
							</div>
							<!-- the clone-url content will be updated by initRepoCloneLink, the code below is used to avoid UI flicking  -->
							<script>
								(() => {
									const proto = localStorage.getItem('repo-clone-protocol') || 'https';
									const btn = document.getElementById(`repo-clone-${proto}`);
									const cloneUrls = document.getElementsByClassName('clone-url');
									// it's ok if we didn't find the btn here, initRepoCloneLink will take all the work
									if (btn) {
										for (let i = 0; i < cloneUrls.length; i++) {
											cloneUrls[i].textContent = btn.getAttribute('data-link');
										}
									}
								})();
							</script>
						{{end}}
					{{else}}
						<div class="ui segment center">
							{{.locale.Tr "repo.empty_message"}}
						</div>
					{{end}}
				</div>
			</div>
		</div>
	</div>
</div>
{{template "base/footer" .}}
